from config import *

CELL_WALL   = '‚ñì'
CELL_FLOOR  = '‚Ä¢'
CELL_CRACK  = '‚¶Å'
CELL_BONES  = '‚∏ó'
CELL_ROCKS  = '‚ó¶'
CELL_PLATE  = '‚éµ'
CELL_GATE0  = '‚òÖ'
CELL_GATE1  = '‚òÜ'
CELL_START  = '‚ñ∫'
CELL_FINISH = '‚óÑ'
CELL_PORTAL = 'ùüò'
CELL_SAND   = '‚ßõ'
CELL_LOCK1  = 'ùüô'
CELL_LOCK2  = 'ùüö'
CELL_VOID   = '¬∑'
CELL_ODIRL  = '‚á∫'
CELL_ODIRR  = '‚áª'
CELL_ODIRU  = '‚áû'
CELL_ODIRD  = '‚áü'
CELL_GLASS  = '‚ñë'
CELL_TRAP0  = '‚¨®'
CELL_TRAP1  = '‚¨ß'

CELL_CURSOR = '‚ñâ'
CELL_SPECIAL0 = '0'
CELL_INTERNAL1 = '1'
CELL_OUTER_WALL = '‚ñí'

CELL_WALL_TYPES = (CELL_WALL, CELL_OUTER_WALL)
CELL_FLOOR_TYPES_RANDGEN = (CELL_CRACK, CELL_BONES, CELL_ROCKS)
CELL_FLOOR_TYPES_FREQUENT = (*CELL_FLOOR_TYPES_RANDGEN, *((CELL_FLOOR,) * EMPTY_FLOOR_FREQUENCY))
CELL_FLOOR_TYPES = (*CELL_FLOOR_TYPES_RANDGEN, CELL_FLOOR)
CELL_FLOOR_EXTENSIONS = (*CELL_FLOOR_TYPES_RANDGEN, CELL_PLATE, CELL_START, CELL_FINISH, CELL_PORTAL, CELL_GATE0, CELL_GATE1, CELL_LOCK1, CELL_LOCK2, CELL_ODIRL, CELL_ODIRR, CELL_ODIRU, CELL_ODIRD, CELL_GLASS, CELL_TRAP0, CELL_TRAP1)
CELL_ENEMY_PLACE_OBSTACLES = (*CELL_WALL_TYPES, CELL_PORTAL, CELL_START, CELL_FINISH, CELL_GATE0, CELL_GATE1, CELL_SAND, CELL_LOCK1, CELL_LOCK2, CELL_VOID, CELL_GLASS, CELL_TRAP0, CELL_TRAP1)
CELL_CHAR_PLACE_OBSTACLES = (*CELL_WALL_TYPES, CELL_PLATE, CELL_PORTAL, CELL_GATE0, CELL_GATE1, CELL_SAND, CELL_LOCK1, CELL_LOCK2, CELL_VOID, CELL_GLASS, CELL_TRAP0, CELL_TRAP1)
CELL_CHAR_MOVE_OBSTACLES  = (*CELL_WALL_TYPES, CELL_GATE0, CELL_LOCK1, CELL_LOCK2, CELL_VOID, CELL_ODIRL, CELL_ODIRR, CELL_ODIRU, CELL_ODIRD, CELL_GLASS)

ACTOR_CHARS = {
	'heart':  '‚ô•',
	'sword':  '‚∏∏',
	'might':  'üñ†',
	'key1':   '¬π',
	'key2':   '¬≤',
	'enemy':  'üï±',
	'barrel': '‚ñ†',
	'mirror': '‚ñ¨',
	'char':   '‚òª',
	'npc':    '‚òÄ',
}

ACTOR_ON_PLATE_CHARS = {
	'heart':  '‚ô°',
	'sword':  '‚∏∑',
	'might':  'üñû',
	'key1':   '‚ÇÅ',
	'key2':   '‚ÇÇ',
	'enemy':  '‚ò†',
	'barrel': '‚ñ°',
	'mirror': '‚ñ≠',
	'char':   '‚ò∫',
	'npc':    '‚òº',
}

ACTOR_AND_PLATE_BY_CHAR = {v: (k, v != ACTOR_CHARS[k]) for k, v in {*ACTOR_CHARS.items(), *ACTOR_ON_PLATE_CHARS.items(),}}

MOVE_A = 'a'
MOVE_H = 'h'
MOVE_V = 'v'
MOVE_L = 'l'
MOVE_R = 'r'
MOVE_U = 'u'
MOVE_D = 'd'
MOVE_N = 'n'

DIRECTION_L = 'l'
DIRECTION_R = 'r'
DIRECTION_U = 'u'
DIRECTION_D = 'd'

DIR_L = (-1, 0)
DIR_R = (+1, 0)
DIR_U = (0, -1)
DIR_D = (0, +1)

DIRS_BY_NAME = {
	DIRECTION_L: DIR_L,
	DIRECTION_R: DIR_R,
	DIRECTION_U: DIR_U,
	DIRECTION_D: DIR_D,
}
DIR_NAMES = {v: k for k, v in DIRS_BY_NAME.items()}
DIRS = *DIR_NAMES,

MOVE_TYPE_DIRS = {
	MOVE_A: [DIR_L, DIR_R, DIR_U, DIR_D],
	MOVE_H: [DIR_L, DIR_R],
	MOVE_V: [DIR_U, DIR_D],
	MOVE_L: [DIR_L],
	MOVE_R: [DIR_R],
	MOVE_U: [DIR_U],
	MOVE_D: [DIR_D],
	MOVE_N: [],
}
MOVE_TYPES = *MOVE_TYPE_DIRS,

CART_CHARS = [
	# regular
	{
		MOVE_A: '‚ú£',
		MOVE_H: '‚áø',
		MOVE_V: '‚á≥',
		MOVE_L: '‚á¶',
		MOVE_R: '‚á®',
		MOVE_U: '‚áß',
		MOVE_D: '‚á©',
		MOVE_N: '‚óç',
	},
	# mirror
	{
		MOVE_A: '‚ú¢',
		MOVE_H: '‚áî',
		MOVE_V: '‚áï',
		MOVE_L: '‚áê',
		MOVE_R: '‚áí',
		MOVE_U: '‚áë',
		MOVE_D: '‚áì',
		MOVE_N: '‚óå',
	},
]

LIFT_CHARS = [
	# regular
	{
		MOVE_A: '‚ú•',
		MOVE_H: '‚Üî',
		MOVE_V: '‚Üï',
		MOVE_L: '‚Üê',
		MOVE_R: '‚Üí',
		MOVE_U: '‚Üë',
		MOVE_D: '‚Üì',
		MOVE_N: '‚óâ',
	},
	# mirror
	{
		MOVE_A: '‚ú§',
		MOVE_H: '‚áÜ',
		MOVE_V: '‚áÖ',
		MOVE_L: '‚áá',
		MOVE_R: '‚áâ',
		MOVE_U: '‚áà',
		MOVE_D: '‚áä',
		MOVE_N: '‚óé',
	},
]

CART_MOVE_TYPES_BY_CHAR = {v: k for d in CART_CHARS for k, v in d.items()}
LIFT_MOVE_TYPES_BY_CHAR = {v: k for d in LIFT_CHARS for k, v in d.items()}
MOVE_TYPES_BY_CHAR = {**CART_MOVE_TYPES_BY_CHAR, **LIFT_MOVE_TYPES_BY_CHAR}

MIRROR_CHARS = tuple(v for d in (CART_CHARS[1], LIFT_CHARS[1]) for k, v in d.items())
MIRROR_ORIENTATION_CHARS = [ '|', '/', '-', '\\' ]

IMAGES_DIR_PREFIX = DATA_DIR + '/images/'
DEFAULT_IMAGE_PREFIX = 'default/'
MAPS_DIR_PREFIX = DATA_DIR + '/maps/'
